# .github/workflows/production.yml

name: Clean Up Staging and Deploy to Production

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:

  cleanup_staging:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Remove staging environment from VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            PR_PORT=$((5001 + ${{ github.event.pull_request.number }}))
            CONTAINER_NAME=${{ github.event.repository.name }}-${{ github.event.pull_request.number }}
            DB_CONTAINER_NAME=${CONTAINER_NAME}-db
            NETWORK_NAME=${CONTAINER_NAME}-net

            echo "Cleaning up environment for PR #${{ github.event.pull_request.number }} on port $PR_PORT"

            echo "Removing Docker artifacts"
            docker stop $CONTAINER_NAME $DB_CONTAINER_NAME || true
            docker rm $CONTAINER_NAME $DB_CONTAINER_NAME || true
            docker network rm $NETWORK_NAME || true


            echo "Removing caddy snippet for port $PR_PORT."
            rm "/etc/caddy/snippets/photographers_story_backend/${{ github.event.pull_request.number }}.caddy" || true
            caddy reload

            echo "Cleanup for PR #${{ github.event.pull_request.number }} on port $PR_PORT complete"

  deploy_production:
    needs: cleanup_staging
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            docker pull ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            docker stop ${{ github.event.repository.name }} || true
            docker rm ${{ github.event.repository.name }} || true
            docker run -d \
              --name ${{ github.event.repository.name }} \
              -p 5001:8080 \
              ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            docker logout ghcr.io